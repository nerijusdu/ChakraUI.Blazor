@using ChakraUI.Blazor.Models
@inherits StyledComponent

<button class="@className"
        type="@Type"
        disabled="@IsDisabled"
        @attributes="OtherParameters">
    @if (LeftIcon != null && !IsLoading)
    {
        // ButtonIcon
    }

    @if (IsLoading)
    {
        // ButtonSpinner
    }
    else
    {
        @if (LeftIcon != null)
        {
            // ButtonIcon
        }

        @ChildContent

        @if (RightIcon != null)
        {
            // ButtonIcon
        }
    }

</button>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public bool IsLoading { get; set; }
    [Parameter] public bool IsActive { get; set; }
    [Parameter] public bool IsDisabled { get; set; }
    [Parameter] public bool IsFullWidth { get; set; }
    [Parameter] public string Type { get; set; }
    [Parameter] public RenderFragment LeftIcon { get; set; }
    [Parameter] public RenderFragment RightIcon { get; set; }
    [Parameter] public string IconSpacing { get; set; }
    [Parameter] public RenderFragment Spinner { get; set; }
    [Parameter] public string Size { get; set; } = "md";

    public override Task SetParametersAsync(ParameterView parameters)
    {
        Display = "inline-flex";
        Appearance = "none";
        AlignItems = "center";
        JustifyContent = "center";
        Transition = "all 250ms";
        UserSelect = "none";
        Position = "relative";
        WhiteSpace = "nowrap";
        VerticalAlign = "middle";
        Outline = "none";
        Width = IsFullWidth ? "100%" : "auto";
        LineHeight = "1.2";
        BorderRadius = "md";
        FontWeight = "semibold";
        Border = "0";
        Cursor = "pointer";

        SetSize();

        return base.SetParametersAsync(parameters);
    }

    protected override void OnParametersSet()
    {
        SetSize();
        base.OnParametersSet();
    }

    private void SetSize()
    {
        if (!sizes.ContainsKey(Size)) return;
        var size = sizes[Size];
        H = size.H;
        MinH = size.MinW;
        FontSize = size.FontSize;
        Px = size.Px;
    }

    private static readonly Dictionary<string, ButtonSizeProps> sizes = new()
    {
        {"lg", new ()
        {
            H = 12,
            MinW = 12,
            FontSize = "lg",
            Px = 6
        }},
        {"md", new ()
        {
            H = 10,
            MinW = 10,
            FontSize = "md",
            Px = 4
        }},
        {"sm", new ()
        {
            H = 8,
            MinW = 8,
            FontSize = "sm",
            Px = 3
        }},
        {"xs", new ()
        {
            H = 6,
            MinW = 6,
            FontSize = "xs",
            Px = 2
        }}
    };

    private class ButtonSizeProps
    {
        public int H { get; set; }
        public int MinW { get; set; }
        public string FontSize { get; set; }
        public int Px { get; set; }
    }
}

